version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env.${ENV:-dev}
    environment:
      - ENV=${ENV:-dev}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - elasticsearch
      - logstash
      - redis
    networks:
      - travel_agent_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - .env.${ENV:-dev}
    environment:
      - ENV=${ENV:-dev}
      - API_BASE_URL=http://backend:8000
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - travel_agent_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - travel_agent_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - travel_agent_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    ports:
      - "5044:5044"
    volumes:
      - ./elk/logstash/config:/usr/share/logstash/config
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - travel_agent_network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  elasticsearch_data:
    driver: local
  redis_data:

networks:
  travel_agent_network:
    driver: bridge 